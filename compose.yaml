version: '3.1'
services: # 컨테이너
  myapp:
    build:
      context: .
      dockerfile: dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:${POSTGRES_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: ${REDIS_PORT}
    volumes:
      - ./app-data:/app/data
    restart: always

  db:
    image: postgres:15
    restart: always
    container_name: postgresql-fifo
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD-SHELL",  "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      retries: 10

  redis:
    image: redis:6.2.5
    hostname: redis
    container_name: redis-fifo
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    labels:
      - "name=redis"
      - "mode=standalone"
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
#      - docker-network
      - app-tier

networks:
#  docker-network:
#    external: true
  app-tier:
    driver: bridge




